{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","components/AddTodo.js","constans.js","redux/selector.js","components/TodoItem.js","components/TodoList.js","components/VisibilityFilters.js","App.js","reportWebVitals.js","redux/reducers/todos.js","redux/reducers/visibilityFilter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","DELETE_TODO","TOGGLE_TODO","CLEAR_TODO","SET_FILTER","setFilter","filter","type","payload","AddTodoContainer","styled","div","Input","input","Button","button","AddTodo","dispatch","useDispatch","useState","value","setValue","onChange","e","target","onClick","content","VISIBILITY_FILTERS","filterState","store","visibilityFilter","TodoWrapper","TodoContent","props","$completed","TodoButtonContainer","ToggleButton","DeleteButton","TodoItem","todo","isComplete","id","TodoList","allTodos","todos","getTodosByVisibilityFilter","useSelector","map","FilterContainer","FilterAll","FilterDone","FilterUnDone","CleanAll","VisibilityFilters","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","todoId","combineReducers","state","action","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"mMAAaA,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAa,aACbC,EAAa,aCgCnB,SAASC,EAAUC,GACxB,MAAO,CACLC,KAAMH,EACNI,QAAS,CACPF,W,muBCnCN,IAAMG,EAAmBC,IAAOC,IAAV,KAIhBC,EAAQF,IAAOG,MAAV,KAYLC,EAASJ,IAAOK,OAAV,KAeG,SAASC,IACtB,IAAMC,EAAWC,cADe,EAENC,mBAAS,IAFH,mBAEzBC,EAFyB,KAElBC,EAFkB,KAGhC,OACE,eAACZ,EAAD,WACE,2CACA,cAACG,EAAD,CACEQ,MAAOA,EACPE,SAAU,SAACC,GACTF,EAASE,EAAEC,OAAOJ,UAGtB,cAACN,EAAD,CACEW,QAAS,WACM,KAAVL,IACHH,EDhDD,CACLV,KAAMP,EACNQ,QAAS,CACPkB,QC6CqBN,KACjBC,EAAS,MAJb,kCChDC,IAAMM,EACN,MADMA,EAEA,YAFAA,EAGC,aCCDC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,kB,wyBCE1C,IAAMC,EAAcrB,IAAOC,IAAV,KAMXqB,EAActB,IAAOC,IAAV,KAEb,SAACsB,GAAD,OACAA,EAAMC,YAAN,qDAOEC,EAAsBzB,IAAOC,IAAV,KACnByB,EAAe1B,IAAOK,OAAV,KAed,SAACkB,GAAD,OACAA,EAAMC,YAAN,8HASEG,EAAe3B,YAAO0B,EAAP1B,CAAH,KASH,SAAS4B,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAC3BtB,EAAWC,cACjB,OACE,eAACa,EAAD,WACE,cAACC,EAAD,CAAaE,YAAgC,IAApBK,EAAKC,WAA9B,SAAqDD,EAAKb,UAC1D,eAACS,EAAD,WACE,cAACC,EAAD,CAAcF,YAAgC,IAApBK,EAAKC,WAAqBf,QAAS,WJ1C9D,IAAoBgB,EI2CjBxB,GJ3CiBwB,EI2CGF,EAAKE,GJ1C1B,CACLlC,KAAML,EACNM,QAAS,CACPiC,UIsCE,SAEIF,EAAKC,WAAa,qBAAQ,uBAC9B,cAACH,EAAD,CAAcZ,QAAS,WJtDxB,IAAoBgB,EIuDjBxB,GJvDiBwB,EIuDGF,EAAKE,GJtD1B,CACLlC,KAAMN,EACNO,QAAS,CACPiC,UIkDE,gCC3DO,SAASC,IAItB,OFLwC,SAACb,EAAOC,GAC9C,IAAMa,EAAWd,EAAMe,MAAMA,MAC/B,OAAOd,GACL,KAAKH,EACH,OAAOgB,EAET,KAAKhB,EACH,OAAOgB,EAASrC,QAAO,SAAAiC,GAAI,OAAIA,EAAKC,cAEtC,KAAKb,EACH,OAAOgB,EAASrC,QAAO,SAAAiC,GAAI,OAAKA,EAAKC,cAEvC,QACE,OAAOG,GETGE,CAFAC,aAAY,SAAAjB,GAAK,OAAIA,KACpBiB,YAAYlB,IAGnBmB,KAAI,SAAAR,GAAI,OACZ,cAACD,EAAD,CAAwBC,KAAMA,GAAfA,EAAKE,O,g8BCP1B,IAAMO,EAAkBtC,IAAOC,IAAV,KAMfsC,EAAYvC,IAAOK,OAAV,KAcTmC,EAAaxC,YAAOuC,EAAPvC,CAAH,KAOVyC,EAAezC,YAAOuC,EAAPvC,CAAH,KAOZ0C,EAAW1C,YAAOuC,EAAPvC,CAAH,KAQC,SAAS2C,IACtB,IAAMpC,EAAWC,cACjB,OACE,eAAC8B,EAAD,WACE,cAACC,EAAD,CAAWxB,QAAS,WAClBR,EAASZ,EAAUsB,KADrB,0BAGA,cAACuB,EAAD,CAAYzB,QAAS,WACnBR,EAASZ,EAAUsB,KADrB,gCAGA,cAACwB,EAAD,CAAc1B,QAAS,WACrBR,EAASZ,EAAUsB,KADrB,gCAGA,cAACyB,EAAD,CAAU3B,QAAS,WACjBR,EN/BC,CACLV,KAAMJ,KM6BJ,6BC/CSmD,MAVf,WACE,OACE,sBAAKC,UAAU,OAAf,UACE,cAACvC,EAAD,IACA,cAAC0B,EAAD,IACA,cAACW,EAAD,QCGSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCLRQ,GAAe,CACnBrB,MAAO,IAGLsB,GAAS,ECHb,IAAMD,GAAetC,ECCNwC,mBAAgB,CAAEvB,MFIlB,WAAqD,IAA/BwB,EAA8B,uDAAtBH,GAAcI,EAAQ,uCACjE,OAAOA,EAAO9D,MACZ,KAAKP,EACH,OAAO,6BACFoE,GADL,IAEExB,MAAM,GAAD,oBAAKwB,EAAMxB,OAAX,CAAiB,CACpBH,GAAIyB,KACJxC,QAAS2C,EAAO7D,QAAQkB,QACxBc,YAAY,OAGhB,KAAKvC,EACL,OAAO,6BACFmE,GADL,IAEExB,MAAOwB,EAAMxB,MAAMtC,QAAO,SAAAiC,GAAI,OAAIA,EAAKE,KAAO4B,EAAO7D,QAAQiC,QAE9D,KAAKvC,EACN,OAAO,6BACFkE,GADL,IAEExB,MAAOwB,EAAMxB,MAAMG,KAAI,SAAAR,GACrB,OAAGA,EAAKE,KAAO4B,EAAO7D,QAAQiC,GAAWF,EAClC,6BACFA,GADL,IAEEC,YAAaD,EAAKC,kBAIxB,KAAKrC,EACL,MAAO,CACLyC,MAAO,IAGX,QACE,OAAOwB,IErC2BtC,iBDCzB,WAAyD,IAA/BsC,EAA8B,uDAAtBH,GAAcI,EAAQ,uCACrE,OAAOA,EAAO9D,MACZ,KAAKH,EACH,OAAOiE,EAAO7D,QAAQF,OAExB,QACE,OAAO8D,MEREE,eACbC,GACAC,OAAOC,8BAAgCD,OAAOC,gCCEhDC,IAASC,OACP,cAAC,IAAD,CAAU9C,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEF+C,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.27e9c63c.chunk.js","sourcesContent":["export const ADD_TODO = 'add_todo';\nexport const DELETE_TODO = 'delete_todo';\nexport const TOGGLE_TODO = 'toggle_todo';\nexport const CLEAR_TODO = 'clear_todo';\nexport const SET_FILTER = \"set_filter\";\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, CLEAR_TODO, SET_FILTER } from './actionTypes'\n\nexport function addTodo(content) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n    }\n  }\n}\n\n\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    }\n  }\n}\n\nexport function toggleTodo(id) {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id,\n    }\n  }\n}\n\nexport function clearTodo() {\n  return {\n    type: CLEAR_TODO,\n  }\n}\n\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    payload: {\n      filter\n    }\n  }\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\nimport styled from 'styled-components';\n\nconst AddTodoContainer = styled.div`\n  text-align: center;\n  color: rgba(0, 0, 0, 0.5);\n`\nconst Input = styled.input`\n  padding: 5px;\n  margin-right: 5px;\n  width: 80%;\n  font-size:20px;\n  border: none;\n\n  border-bottom: 1px solid rgba(0, 0, 0, 0.8);\n  &:focus {\n    outline: none;\n  }\n`\nconst Button = styled.button`\n  padding: 5px;\n  background: rgba(255, 255, 255, 1);\n  border: 1px solid rgba(0, 0, 0, 0.8);\n  border-radius: 8px;\n  cursor: pointer;\n  color: rgba(0, 0, 0, 0.7);\n\n  &:hover {\n    transform: scale(1.1);\n    color: rgba(10, 50, 60, 1);\n    transition: transform 0.3s;\n  }\n`\n\nexport default function AddTodo() {\n  const dispatch = useDispatch() \n  const [value, setValue] = useState('')\n  return (\n    <AddTodoContainer>\n      <h1>Todo List</h1>\n      <Input\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n      />\n      <Button\n        onClick={() => {\n          if(value === '') return;\n          dispatch(addTodo(value));\n          setValue('')\n        }}\n      >\n        新增 Todo\n      </Button>\n    </AddTodoContainer>\n  );\n}\n\n","export const VISIBILITY_FILTERS = {\n  ALL: \"all\",\n  COMPLETED: \"completed\",\n  UNCOMPLETE: \"uncomplete\"\n};\n","import { VISIBILITY_FILTERS } from '../constans';\n\nexport const selectTodos = store => store.todos.todos\n\nexport const filterState = store => store.visibilityFilter\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n    const allTodos = store.todos.todos;\n  switch(visibilityFilter) {\n    case VISIBILITY_FILTERS.ALL: {\n      return allTodos;\n    }\n    case VISIBILITY_FILTERS.COMPLETED: {\n      return allTodos.filter(todo => todo.isComplete)\n    }\n    case VISIBILITY_FILTERS.UNCOMPLETE: {\n      return allTodos.filter(todo => !todo.isComplete)\n    }\n    default: {\n      return allTodos\n    }\n  }\n}\n","import React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, toggleTodo } from '../redux/actions'\n\nimport styled from 'styled-components';\n\nconst TodoWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n`\n\nconst TodoContent = styled.div`\n  font-size: 26px;\n  ${(props) => \n    props.$completed && \n    `\n    text-decoration:line-through;\n  } \n    `}\n`\n\nconst TodoButtonContainer = styled.div``\nconst ToggleButton = styled.button`\n  \n  background: white;\n  border: none;\n  border-radius: 8px;\n  padding: 10px;\n  color: rgba(0, 0, 0, 0.6);\n  font-size: 26px;\n  cursor: pointer;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n    color: white;\n  }\n\n  ${(props) => \n    props.$completed && \n    `\n    color: rgba(0, 200, 0, 1);\n    &:hover {\n    background: rgba(255, 255, 255, 0.6);\n    color: #333;\n  } \n    `}\n`\nconst DeleteButton = styled(ToggleButton)`\n  color: rgba(255, 0, 0, 0.6);\n\n  &:hover {\n      background: rgba(255, 0, 0, 0.6);\n      color: white;\n    }\n`\n\nexport default function TodoItem({ todo }) {\n  const dispatch = useDispatch()\n  return (\n    <TodoWrapper>\n      <TodoContent $completed={todo.isComplete === true} >{todo.content}</TodoContent>\n      <TodoButtonContainer>\n        <ToggleButton $completed={todo.isComplete === true} onClick={() => {\n          dispatch(toggleTodo(todo.id))\n        }}>{todo.isComplete ? '未完成' : '已完成'}</ToggleButton>\n        <DeleteButton onClick={() => {\n          dispatch(deleteTodo(todo.id))\n        }}>刪除</DeleteButton>\n      </TodoButtonContainer>\n    </TodoWrapper>\n    )\n}\n\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getTodosByVisibilityFilter, filterState } from '../redux/selector'\nimport TodoItem from './TodoItem';\n\n\n\nexport default function TodoList() {\n  const state = useSelector(store => store)\n  const filter = useSelector(filterState)\n  const todos = getTodosByVisibilityFilter(state, filter)\n  return (\n    todos.map(todo => (\n      <TodoItem key={todo.id} todo={todo}/>\n    ))\n  );\n}\n\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { clearTodo, setFilter } from \"../redux/actions\";\nimport styled from 'styled-components';\nimport { VISIBILITY_FILTERS } from '../constans'\n\nconst FilterContainer = styled.div`\n  position: fixed;\n  top: 1%;\n  right: 1%;\n`\n\nconst FilterAll = styled.button`\n  background: white;\n  border: none;\n  border-radius: 8px;\n  padding: 10px;\n  color: rgba(0, 0, 0, 0.6);\n  font-size: 26px;\n  cursor: pointer;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n    color: white;\n  }\n`\nconst FilterDone = styled(FilterAll)`\n  color: rgba(10, 200, 20, 1);\n   &:hover {\n    background: rgba(10, 200, 20, 0.8);\n    color: white;\n  }\n`\nconst FilterUnDone = styled(FilterAll)`\n  color: rgba(10, 20, 200, 0.8);\n  &:hover {\n    background: rgba(10, 20, 200, 0.8);\n    color: white;\n  }\n`\nconst CleanAll = styled(FilterAll)`\n  color: rgba(255, 100, 100, 1);\n  &:hover {\n    background: rgba(255, 0, 0, 0.6);\n    color: white;\n  }\n`\n\nexport default function VisibilityFilters() {\n  const dispatch = useDispatch();\n  return (\n    <FilterContainer>\n      <FilterAll onClick={() => {\n        dispatch(setFilter(VISIBILITY_FILTERS.ALL))\n      }}>全部</FilterAll>\n      <FilterDone onClick={() => {\n        dispatch(setFilter(VISIBILITY_FILTERS.COMPLETED))\n      }}>已完成</FilterDone>\n      <FilterUnDone onClick={() => {\n        dispatch(setFilter(VISIBILITY_FILTERS.UNCOMPLETE));\n      }}>未完成</FilterUnDone>\n      <CleanAll onClick={() => {\n        dispatch(clearTodo())\n      }}>清空</CleanAll>\n    </FilterContainer>\n  );\n}\n\n","import AddTodo from './components/AddTodo';\nimport TodoList from './components/TodoList';\nimport VisibilityFilters from './components/VisibilityFilters';\n\nfunction App() {\n  return (\n    <div className=\"Todo\">\n      <AddTodo />\n      <TodoList />\n      <VisibilityFilters />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, CLEAR_TODO } from '../actionTypes'\n\nconst initialState = {\n  todos: [],\n}\n\nlet todoId = 0;\n\nexport default function todosReducer(state = initialState, action) {\n  switch(action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos:[...state.todos,{\n          id: todoId++,\n          content: action.payload.content,\n          isComplete: false\n        }],\n      }\n      case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload.id)\n      }\n       case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo => {\n          if(todo.id !== action.payload.id) return todo;\n          return {\n            ...todo,\n            isComplete: !todo.isComplete,\n          }\n        })\n      }\n      case CLEAR_TODO:\n      return {\n        todos: []\n      }\n      \n    default: {\n      return state;\n    }\n  }\n}\n","import { VISIBILITY_FILTERS } from '../../constans'\nimport { SET_FILTER } from '../actionTypes'\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nexport default function visibilityFilter(state = initialState, action) {\n  switch(action.type) {\n    case SET_FILTER: {\n      return action.payload.filter;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({ todos, visibilityFilter });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}